- id: mybestpractices-git-autotag
  name: Automatically add a new git tag when the project version is updated.
  description: This hook reads the version of your project in setup.cfg or pyproject.toml and add a git tag if this versino is changed.
  entry: mybestpractices-git-autotag
  language: python
  types: [text]
  pass_filenames: false
- id: required-precommit-hooks
  name: Automatically add a new git tag when the project version is updated.
  description: This hook reads the version of your project in setup.cfg or pyproject.toml and add a git tag if this versino is changed.
  entry: required-precommit-hooks
  language: python
  types: [text]
  pass_filenames: false
- id: mybestpractices-structure
  name: Check for important files in the project structure.
  description: Check if common important files exist, like license, readme or gitignore files.
  entry: mybestpractices-structure
  language: python
  pass_filenames: false
  args: ["--license", "LICENSE", "--readme", "README.md", "--gitignore", ".gitignore"]
- id: mybestpractices-third-party-update
  name: Update vendor (third-party) components
  description: This hook reads the version of your project in setup.cfg or pyproject.toml and add a git tag if this versino is changed.
  entry: mybestpractices-third-party-update
  language: python
  pass_filenames: false
  args: ["--script", "tools/update_third_party.sh"]
- id: mybestpractices-copyright
  name: Update the copyright notice.
  description: Update the copyright notice on each processed file.
  entry: mybestpractices-copyright
  language: python
  pass_filenames: true
  args: ["--copyright", "tools/copyright.txt"]
